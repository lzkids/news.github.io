<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>My Life</title>
  
  
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://kisskisso.com/"/>
  <updated>2021-02-24T09:03:53.000Z</updated>
  <id>http://kisskisso.com/</id>
  
  <author>
    <name>唯獨少了個字</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>查看共享文件与终端</title>
    <link href="http://kisskisso.com/2021/02/24/%E5%85%B1%E4%BA%AB%E4%B8%8E%E6%9F%A5%E7%9C%8B%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/"/>
    <id>http://kisskisso.com/2021/02/24/%E5%85%B1%E4%BA%AB%E4%B8%8E%E6%9F%A5%E7%9C%8B%E7%BB%88%E7%AB%AF%E5%91%BD%E4%BB%A4/</id>
    <published>2021-02-24T16:33:04.000Z</published>
    <updated>2021-02-24T09:03:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>查看共享文件夹</p><pre><code class="language-bash">vmware-hgfsclient</code></pre><p>查看终端命令</p><pre><code class="language-bash">cat /etc/shells</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;查看共享文件夹&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;vmware-hgfsclient
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;查看终端命令&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cat /etc/shel
      
    
    </summary>
    
    
      <category term="语言与Linux" scheme="http://kisskisso.com/categories/%E8%AF%AD%E8%A8%80%E4%B8%8ELinux/"/>
    
    
  </entry>
  
  <entry>
    <title>nvm的安裝與配置</title>
    <link href="http://kisskisso.com/2021/02/24/nvm%E7%9A%84%E5%AE%89%E8%A3%9D%E8%88%87%E9%85%8D%E7%BD%AE/"/>
    <id>http://kisskisso.com/2021/02/24/nvm%E7%9A%84%E5%AE%89%E8%A3%9D%E8%88%87%E9%85%8D%E7%BD%AE/</id>
    <published>2021-02-24T00:03:38.000Z</published>
    <updated>2021-02-24T12:23:01.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="如何安装nvm">          <a href="#如何安装nvm" class="heading-link"><i class="fas fa-link"></i></a>如何安装nvm</h3>      <p><span class="exturl"><a class="exturl__link" href="https://github.com/nvm-sh/nvm" target="_blank" rel="noopener">nvm</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> 是用于管理多个活动的nodejs版本</p><p>要安装或更新 nvm，你应该运行安装脚本。要做到这一点，你可以<span class="exturl"><a class="exturl__link" href="https://github.com/nvm-sh/nvm/blob/v0.37.2/install.sh" target="_blank" rel="noopener">手动下载</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>并运行该脚本，或者使用下面的cURL或Wget命令:</p><pre><code class="language-bash">curl  -o-  https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh   |  bash</code></pre><p>or</p><pre><code class="language-bash">wget  -qO-  https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh   |   bash</code></pre><p>运行上述任何一个命令都会下载一个脚本并运行它。脚本会将nvm资源库克隆到<code>~/.nvm</code>，并尝试将下面代码段中的源码行添加到正确的配置文件中(<code>~/.bash_profile</code>or<code>~/.zshrc</code>or<code>~/.profile</code>or<code>~/.bashrc</code>)  <a id="more"></a></p><p>#This loads nvm</p><pre><code class="language-bash">export NVM_DIR="$([ -z "${XDG_CONFIG_HOME-}" ] &amp;&amp; printf %s "${HOME}/.nvm" || printf %s "${XDG_CONFIG_HOME}/nvm")"</code></pre><pre><code class="language-bash">[ -s "$NVM_DIR/nvm.sh" ] &amp;&amp; \. "$NVM_DIR/nvm.sh" </code></pre><p>在Linux上，运行安装脚本后，如果在输入命令<code>nvm -v</code>后，得到nvm: command not found或终端没有反馈，只需关闭当前终端，打开一个新的终端，再尝试验证。</p><p>配置镜像源可以提高nodejs的下载速度，尝试将下面的代码段配置上面提到的配置文件中去(不用全部配置)</p>        <h3 id="nvm-镜像源">          <a href="#nvm-镜像源" class="heading-link"><i class="fas fa-link"></i></a><strong>nvm 镜像源</strong></h3>      <p>#node官方<br><code>export  NVM_NODEJS_ORG_MIRROR="https://nodejs.org/dist"  </code><br>or<br>#淘宝镜像源<br><code>export NVM_NODEJS_ORG_MIRROR="https://mirrors.aliyun.com/nodejs-release/" </code><br>or<br>#清华大学镜像源<br><code>export NVM_NODEJS_ORG_MIRROR="https://mirrors.tuna.tsinghua.edu.cn/nodejs-release/" </code></p><p><font color="red" size="2">注意：如果更换的是这个镜像源<s>exportNVM_NODEJS_ORG_MIRROR=“<span class="exturl"><a class="exturl__link" href="https://npm.taobao.org/mirrors/node" target="_blank" rel="noopener">https://npm.taobao.org/mirrors/node</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>”</s> 的话下载nodejs会显示url404,至少我是这样</font></p>        <h3 id="使用方法">          <a href="#使用方法" class="heading-link"><i class="fas fa-link"></i></a>使用方法</h3>      <p>要下载、编译并安装最新版本的node，请这样做:</p><pre><code class="language-bash"># "node" is an alias for the latest version       /nvm install node </code></pre><p>要安装特定版本的node:</p><pre><code class="language-bash">nvm install 12.20.2       # or 14.16.0</code></pre><p>使用ls-remote列出可用的版本:</p><pre><code class="language-bash">nvm ls-remote</code></pre><p>然后在任何新的shell中只需使用已安装的版本:</p><pre><code class="language-bash">nvm use node  or  nvm use 12.20.2 #or 14.16.0</code></pre><p>查看安装了哪些版本：</p><pre><code class="language-bash">nvm ls</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;如何安装nvm&quot;&gt;
          &lt;a href=&quot;#如何安装nvm&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;如何安装nvm&lt;/h3&gt;
      
&lt;p&gt;&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://github.com/nvm-sh/nvm&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;nvm&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt; 是用于管理多个活动的nodejs版本&lt;/p&gt;
&lt;p&gt;要安装或更新 nvm，你应该运行安装脚本。要做到这一点，你可以&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://github.com/nvm-sh/nvm/blob/v0.37.2/install.sh&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;手动下载&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;并运行该脚本，或者使用下面的cURL或Wget命令:&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;curl  -o-  https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh   |  bash
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;or&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;wget  -qO-  https://raw.githubusercontent.com/nvm-sh/nvm/v0.37.2/install.sh   |   bash
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;运行上述任何一个命令都会下载一个脚本并运行它。脚本会将nvm资源库克隆到&lt;code&gt;~/.nvm&lt;/code&gt;，并尝试将下面代码段中的源码行添加到正确的配置文件中(&lt;code&gt;~/.bash_profile&lt;/code&gt;or&lt;code&gt;~/.zshrc&lt;/code&gt;or&lt;code&gt;~/.profile&lt;/code&gt;or&lt;code&gt;~/.bashrc&lt;/code&gt;)&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>虚拟机配置共享文件</title>
    <link href="http://kisskisso.com/2021/02/23/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/"/>
    <id>http://kisskisso.com/2021/02/23/%E8%99%9A%E6%8B%9F%E6%9C%BA%E9%85%8D%E7%BD%AE%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6/</id>
    <published>2021-02-23T19:08:11.000Z</published>
    <updated>2021-02-23T11:22:04.000Z</updated>
    
    <content type="html"><![CDATA[<p>在VMware虚拟机上设置共享文件夹，现在通过下面的命令就可以看到已经设置好的共享文件夹名</p><pre><code class="language-bash">vmware-hgfsclient</code></pre><p>进入/etc/systemd/system目录</p><pre><code class="language-bash">cd /etc/systemd/system</code></pre><p>创建一个文件</p><pre><code class="language-bash">touch xxx.xxx.service</code></pre><p>用vim或者其它喜欢的软件打开</p><pre><code class="language-bash">sudo vim xxx.xxx.service</code></pre><p>填入下面的内容，为了方便，就不单独配置各个共享文件夹了，直接将所有共享文件夹mount到一个目录下 <a id="more"></a></p><pre><code class="language-bash">[Unit]Description=Load VMware shared foldersRequires=vmware-vmblock-fuse.serviceAfter=vmware-vmblock-fuse.serviceConditionPathExists=.host:/ConditionVirtualization=vmware[Service]Type=oneshotRemainAfterExit=yesExecStart=ExecStart=/usr/bin/vmhgfs-fuse -o allow_other -o auto_unmount .host:/ /mnt/hgfs[Install]WantedBy=multi-user.target</code></pre><p>保存后，用systemctl命令使能这个service</p><pre><code class="language-bash">sudo systemctl enable xxx.xxx.service</code></pre><p>查看/mnt里有没有hgfs文件夹</p><p>如果没有创建hgfs文件夹，需要创建<code>mkdir hgfs</code></p><pre><code class="language-bash">sudo mkdir -p /mnt/hgfs</code></pre><p>重启后检查共享目录是否已经挂载到/mnt/hgfs目录下了</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在VMware虚拟机上设置共享文件夹，现在通过下面的命令就可以看到已经设置好的共享文件夹名&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;vmware-hgfsclient
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;进入/etc/systemd/system目录&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;cd /etc/systemd/system
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;创建一个文件&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;touch xxx.xxx.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;用vim或者其它喜欢的软件打开&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo vim xxx.xxx.service
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;填入下面的内容，为了方便，就不单独配置各个共享文件夹了，直接将所有共享文件夹mount到一个目录下&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>虚拟机安装开源增强工具</title>
    <link href="http://kisskisso.com/2021/02/23/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E5%BC%80%E6%BA%90%E5%A2%9E%E5%BC%BA%E5%B7%A5%E5%85%B7/"/>
    <id>http://kisskisso.com/2021/02/23/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E5%BC%80%E6%BA%90%E5%A2%9E%E5%BC%BA%E5%B7%A5%E5%85%B7/</id>
    <published>2021-02-23T18:57:17.000Z</published>
    <updated>2021-02-23T11:32:10.000Z</updated>
    
    <content type="html"><![CDATA[<p>安装open-vm-tools增强工具</p><pre><code class="language-bash">sudo pacman -S open-vm-tools</code></pre><p>开机启动服务</p><pre><code class="language-bash">systemctl enable  vmtoolsd.service</code></pre><pre><code class="language-bash">systemctl enable   vmware-vmblock-fuse.service</code></pre><p>安装gtkmm3</p><pre><code class="language-bash">sudo pacman -S gtkmm3</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;安装open-vm-tools增强工具&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo pacman -S open-vm-tools
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;开机启动服务&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;langu
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>fcitx5的安裝與配置</title>
    <link href="http://kisskisso.com/2021/02/23/%E5%AE%89%E8%A3%85fcitx5/"/>
    <id>http://kisskisso.com/2021/02/23/%E5%AE%89%E8%A3%85fcitx5/</id>
    <published>2021-02-23T18:52:23.000Z</published>
    <updated>2021-02-24T08:27:57.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>安装fcitx5</strong></p><pre><code class="language-bash">sudo pacman -S fcitx5sudo pacman -S  fcitx5-rime</code></pre><blockquote><p>打开fcitx5配置报错:</p><p>你正在运行kde，但是fcitx找不到KCModule未被找到，此KCModule的软件包名通常为kcm-fcitx 或kde-config-fcitx.现在将打开配置目录</p></blockquote><p>需要安装：</p><pre><code class="language-bash">sudo pacman -S fcitx5-configtool</code></pre><p>配置編輯<code>etc/profile</code>文件，末尾寫入</p><pre><code class="language-bash">#Fcitxexport GTK_IM_MODULE=fcitx</code></pre><pre><code class="language-bash">export QT_IM_MODULE=fcitx</code></pre><pre><code class="language-bash">export XMODIFIERS="@im=fcitx"</code></pre><p>如果還不支持請嘗試運行<code>sudo pacman -S fcitx5-im</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;安装fcitx5&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;sudo pacman -S fcitx5
sudo pacman -S  fcitx5-rime
&lt;/code&gt;&lt;/pre&gt;
&lt;blockquot
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Arch删除卸载命令</title>
    <link href="http://kisskisso.com/2021/02/23/Arch%E5%88%A0%E9%99%A4%E5%8D%B8%E8%BD%BD%E5%91%BD%E4%BB%A4/"/>
    <id>http://kisskisso.com/2021/02/23/Arch%E5%88%A0%E9%99%A4%E5%8D%B8%E8%BD%BD%E5%91%BD%E4%BB%A4/</id>
    <published>2021-02-23T18:44:11.000Z</published>
    <updated>2021-02-23T11:33:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>删除单个软件包，保留其全部已经安装的依赖关系</p><p>pacman -R package_name</p><p>删除指定软件包，及其所有没有被其他已安装软件包使用的依赖关系：</p><p>pacman -Rs package_name 【推荐命令】</p><p>要删除软件包和所有依赖这个软件包的程序:</p><p>⚠pacman -Rsc package_name</p><p>警告: 此操作是递归的，请小心检查，可能会一次删除大量的软件包。 <a id="more"></a></p><p>要删除软件包，但是不删除依赖这个软件包的其他程序：</p><p>⚠pacman -Rdd package_name pacman</p><p>删除某些程序时会备份重要配置文件，在其后面加上*.pacsave扩展名。-n 选项可以删除这些文件：</p><p>pacman -Rn package_name</p><p>pacman -Rsn package_name</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;删除单个软件包，保留其全部已经安装的依赖关系&lt;/p&gt;
&lt;p&gt;pacman -R package_name&lt;/p&gt;
&lt;p&gt;删除指定软件包，及其所有没有被其他已安装软件包使用的依赖关系：&lt;/p&gt;
&lt;p&gt;pacman -Rs package_name 【推荐命令】&lt;/p&gt;
&lt;p&gt;要删除软件包和所有依赖这个软件包的程序:&lt;/p&gt;
&lt;p&gt;⚠pacman -Rsc package_name&lt;/p&gt;
&lt;p&gt;警告: 此操作是递归的，请小心检查，可能会一次删除大量的软件包。&lt;/p&gt;
    
    </summary>
    
    
      <category term="语言与Linux" scheme="http://kisskisso.com/categories/%E8%AF%AD%E8%A8%80%E4%B8%8ELinux/"/>
    
    
      <category term="Linux命令" scheme="http://kisskisso.com/tags/Linux%E5%91%BD%E4%BB%A4/"/>
    
  </entry>
  
  <entry>
    <title>VMware切换大小写作用失效</title>
    <link href="http://kisskisso.com/2021/02/22/VMware%E5%88%87%E6%8D%A2%E5%A4%A7%E5%B0%8F%E5%86%99%E4%BD%9C%E7%94%A8%E5%A4%B1%E6%95%88/"/>
    <id>http://kisskisso.com/2021/02/22/VMware%E5%88%87%E6%8D%A2%E5%A4%A7%E5%B0%8F%E5%86%99%E4%BD%9C%E7%94%A8%E5%A4%B1%E6%95%88/</id>
    <published>2021-02-22T14:36:55.000Z</published>
    <updated>2021-02-22T06:59:50.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="VMware-Caps-Lock键-切换大小写作用失效的Bug的解决办法">          <a href="#VMware-Caps-Lock键-切换大小写作用失效的Bug的解决办法" class="heading-link"><i class="fas fa-link"></i></a><strong>VMware(Caps Lock键)切换大小写作用失效的Bug的解决办法</strong></h3>      <p>1.用shift + 要大写的字母</p><p><s>2.首先停止运行中的虚拟机，打开虚拟机镜像安装的位置找到<code>.vmx</code>在vscode打开在最后添加<code>mks.win32.useInjectedMagic = "FALSE"</code></s></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;VMware-Caps-Lock键-切换大小写作用失效的Bug的解决办法&quot;&gt;
          &lt;a href=&quot;#VMware-Caps-Lock键-切换大小写作用失效的Bug的解决办法&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas 
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>ArchLinux安装</title>
    <link href="http://kisskisso.com/2021/02/21/ArchLinux%E5%AE%89%E8%A3%85/"/>
    <id>http://kisskisso.com/2021/02/21/ArchLinux%E5%AE%89%E8%A3%85/</id>
    <published>2021-02-21T20:17:02.000Z</published>
    <updated>2021-02-23T11:30:00.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="如何在虚拟机安装Arch-Linux？">          <a href="#如何在虚拟机安装Arch-Linux？" class="heading-link"><i class="fas fa-link"></i></a><strong>如何在虚拟机安装Arch Linux？</strong></h3>      <p>1.新建一个虚拟机。下载Arch ios（镜像站下载）</p><p>**2.**虚拟机设置—选项—高级—选择uefi</p><p>3.开机</p><p>4.配置网络</p><pre><code class="language-bash">dhcpcd</code></pre><p>5.wifi-menu <a id="more"></a></p><blockquote><p>会显示zsh: command not found: wifi-memu</p><p>zsh：找不到命令：wifi-memu。</p></blockquote><p>6.配置镜像源</p><pre><code class="language-bash">nano /etc/pacman.d/mirrorlist</code></pre><p><span class="exturl"><a class="exturl__link" href="https://mirrors.tuna.tsinghua.edu.cn/help/archlinux/" target="_blank" rel="noopener">清华大学镜像源</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>ctrl + x 然后输入y按回车</p><p>7.磁盘分区</p><pre><code class="language-bash"> cfdisk /dev/sda</code></pre><p>创建300m EFI分区 剩余空间创建根分区</p><p>new 回车 300m（第二个同理指剩余的空间）</p><p>选择write回车输入yes</p><p>quit退出</p><p>8.把根分区格式化为ext4</p><pre><code class="language-bash">mkfs.ext4 /dev/sda2</code></pre><p>9.把EFI分区格式化为fat32</p><pre><code class="language-bash">mkfs.fat -F32 /dev/sda1</code></pre><p>10.挂在根分区</p><pre><code class="language-bash">mount /dev/sda2 /mnt</code></pre><p>11.创建EFI分区挂载点</p><pre><code class="language-bash">mkdir /mnt/boot  mkdir /mnt/boot/EFI</code></pre><p>12.挂在EFI分区</p><pre><code class="language-bash">mount /dev/sda1 /mnt/boot/EFI</code></pre><p>13.安装基础包</p><pre><code class="language-bash">pacstrap -i /mnt base base-devel linux linux-firmware</code></pre><p>注：需要按两下回车 然后yes</p><p>14.生成文件系统表</p><pre><code class="language-bash">genfstab -U /mnt &gt;&gt; /mnt/etc/fstab</code></pre><p>15检查文件系统表有没有问题</p><pre><code class="language-bash">cat  /mnt/etc/fstab</code></pre><p>16.切换根目录</p><pre><code class="language-bash">arch-chroot /mnt</code></pre><p>17.设置时区</p><pre><code class="language-bash">ln -sf /usr/share/zoneinfo$(tzselect) /etc/localtime</code></pre><blockquote><p>4 &gt;&gt;9&gt;&gt;1&gt;&gt;1</p></blockquote><p>18.设置时间漂移</p><pre><code class="language-bash">hwclock --systohc --utc</code></pre><p>19.配置locale</p><pre><code class="language-bash">nano /etc/locale.gen</code></pre><blockquote><p>19.1终端显示 bash: nano:command not found(bash: nano:命令未找到)</p><p>​      19.1.1下载nano pacman -S nano</p></blockquote><p>20.生成locale文件</p><pre><code class="language-bash">locale-gen</code></pre><p>21.设置语言（tty中文乱码）</p><pre><code class="language-bash">echo LANG=en_US.UTF-8 &gt; /etc/locale.conf</code></pre><p>22.设置主机名</p><pre><code class="language-bash">echo kiss &gt; /etc/hostname</code></pre><p>23.配置hosts文件<span class="exturl"><a class="exturl__link" href="https://wiki.archlinux.org/index.php/Network_configuration_(%E7%AE%80%E4%BD%93%E4%B8%AD%E6%96%87)#%E6%9C%AC%E5%9C%B0%E4%B8%BB%E6%9C%BA%E5%90%8D%E8%A7%A3%E6%9E%90" target="_blank" rel="noopener">ArchWiki配置</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><p>nano  /etc/hostname</p><blockquote><p>127.0.0.1        localhost<br>::1              localhost<br>127.0.1.1        myhostname.localdomain        myhostname</p></blockquote><p>24.安装DHCP</p><pre><code class="language-bash">pacman -S dhcpcd</code></pre><p>25.启动dhcp服务</p><pre><code class="language-bash">systemctl enable dhcpcd.service</code></pre><p>26.设置root密码</p><pre><code class="language-bash">passwd</code></pre><p>27.创建普通用户</p><pre><code class="language-bash">useradd -m -G wheel -s /bin/bash xxx</code></pre><p>27.1设置密码 用户名</p><pre><code class="language-ba">passwd xxx</code></pre><p>28.安装vim sudo</p><pre><code class="language-bash">pacman -S vim sudo</code></pre><p>29.赋予用户sudo权限</p><pre><code class="language-bash">visudo 去掉%wheel ALL=(ALL)ALL的#</code></pre><p>30.安装引导</p><pre><code class="language-bash">pacman -s grub efibootmgr 多系统安装os-prober</code></pre><p>31.grub安装</p><pre><code class="language-bash">grub-install --target=x86_64-efi --efi-directory=/boot/EFI</code></pre><p>32.生成配置文件</p><pre><code class="language-bash">grub-mkconfig -o /boot/grub/grub.cfg</code></pre><p>33.退出重启</p><pre><code class="language-bash">exit reboot</code></pre><hr><p>34.查看显示设备</p><pre><code class="language-bash">lspci | grep vga</code></pre><p>35.安装通用的显示驱动</p><pre><code class="language-bash">pacman -S xf86-video-vesa</code></pre><p>36.安装xorg</p><pre><code class="language-bash">pacman -S xorg</code></pre><p>38.安装字体</p><pre><code class="language-bash">pacman -S ttf-dejavu wqy-microhei</code></pre><p>39.安装kde桌面环境和应用</p><pre><code class="language-bash">pacman -S plasma kde-applications</code></pre><p>40启用显示管理服务</p><pre><code class="language-bash">systemctl enable sddm</code></pre><p>41启用网络管理器</p><pre><code class="language-bash">systemctl  enable NetworkManager</code></pre><p>42.重启</p><pre><code class="language-bash">reboot</code></pre><p>43.更改中文</p><p>略</p><p>44.根据网址设置更新镜像  写入签名key</p><p><span class="exturl"><a class="exturl__link" href="https://mirrors.tuna.tsinghua.edu.cn/help/archlinuxcn/" target="_blank" rel="noopener">ArchlinuxCN</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;如何在虚拟机安装Arch-Linux？&quot;&gt;
          &lt;a href=&quot;#如何在虚拟机安装Arch-Linux？&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;&lt;strong&gt;如何在虚拟机安装Arch Linux？&lt;/strong&gt;&lt;/h3&gt;
      
&lt;p&gt;1.新建一个虚拟机。下载Arch ios（镜像站下载）&lt;/p&gt;
&lt;p&gt;**2.**虚拟机设置—选项—高级—选择uefi&lt;/p&gt;
&lt;p&gt;3.开机&lt;/p&gt;
&lt;p&gt;4.配置网络&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;language-bash&quot;&gt;dhcpcd
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;5.wifi-menu&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>如何在Firefox中禁用WebRTC补充</title>
    <link href="http://kisskisso.com/2021/02/15/%E5%A6%82%E4%BD%95%E5%9C%A8Firefox%E4%B8%AD%E7%A6%81%E7%94%A8WebRTC%E8%A1%A5%E5%85%85/"/>
    <id>http://kisskisso.com/2021/02/15/%E5%A6%82%E4%BD%95%E5%9C%A8Firefox%E4%B8%AD%E7%A6%81%E7%94%A8WebRTC%E8%A1%A5%E5%85%85/</id>
    <published>2021-02-15T16:10:28.000Z</published>
    <updated>2021-02-15T09:40:52.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="FireFox-about-config-的隐私设置调整">          <a href="#FireFox-about-config-的隐私设置调整" class="heading-link"><i class="fas fa-link"></i></a>FireFox: "about:config"的隐私设置调整</h2>              <h3 id="准备：">          <a href="#准备：" class="heading-link"><i class="fas fa-link"></i></a>准备：</h3>      <p>1.在浏览器的网址列输入 “about:config” 并点击 enter 键</p><p>2.点击"I’ll be careful, I promise!"按钮<br>3.依照下方的指示操作…</p>        <h3 id="开始动手：">          <a href="#开始动手：" class="heading-link"><i class="fas fa-link"></i></a>开始动手：</h3>      <ol><li><p>privacy.firstparty.isolate = true</p><ul><li><span class="exturl"><a class="exturl__link" href="https://wiki.mozilla.org/Security/Tor_Uplift" target="_blank" rel="noopener">Tor Uplift</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>效用的结果，它可隔绝主要访问网域中所有浏览器辨识器来源（如 cookies），并期能可阻挡跨域名的追踪。（如果已使用扩展 “Cookie AutoDelete”，请不要打开此功能。）</li></ul></li><li><p>privacy.resistFingerprinting = true</p><ul><li><span class="exturl"><a class="exturl__link" href="https://wiki.mozilla.org/Security/Tor_Uplift" target="_blank" rel="noopener">Tor Uplift</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> 效用的结果, 此偏好可让 Firefox 更能抵抗指纹辨识。</li></ul></li><li><p>privacy.trackingprotection.enabled = true  <a id="more"></a></p><ul><li>Mozilla 新內建的追踪保护功能，其利用 <span class="exturl"><a class="exturl__link" href="http://Disconnect.me" target="_blank" rel="noopener">Disconnect.me</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> 过滤名单，但如果你已使用其它第三方的屏滤器如 uBlock Origin，其效能就会重复多余，因此你可以将之设为关闭。</li></ul></li><li><p>browser.cache.offline.enable = false</p><ul><li>取消离线的缓存快取资料</li></ul></li><li><p>browser.safebrowsing.malware = false</p><ul><li>取消 Google 安全浏览的恶意软件检查。这会有安全上的风险，但可改善隐私。</li></ul></li><li><p>browser.safebrowsing.phishing.enabled = false</p><ul><li>取消Google安全浏览与防钓鱼保护。这会有安全上的风险，但可改善隐私。</li></ul></li><li><p>browser.send_pings = false</p><ul><li>这个性能可让网站追踪访客的点击情況。</li></ul></li><li><p>browser.sessionstore.max_tabs_undo = 0</p><ul><li>尽管 Firefox 设定为不记录浏览资讯，但在用户关闭浏览器分页之前，这些资讯仍会暂存在选单 -&gt; 浏览历史 -&gt; 近期关闭的分页 底下</li></ul></li><li><p>browser.urlbar.speculativeConnect.enabled = false</p><ul><li>关闭自动完成的 URLs 预载， 当用户在网址列输入资讯时，Firefox 会自行预载，有人担心这些浏览器自动建议的网址并非是用户想要连上的网站。</li></ul></li><li><p>dom.battery.enabled = false</p></li></ol><ul><li>网站主人可以追踪用户上网设备的电池状况。</li></ul><ol start="11"><li>dom.event.clipboardevents.enabled = false</li></ol><ul><li>取消让网站在让你从某网页中复制、贴上是剪下任何内容時，会发出通知。这会让他们知道网页的哪一部份被挑选。</li></ul><ol start="12"><li>geo.enabled = false</li></ol><ul><li>取消地理定位资料</li></ul><ol start="13"><li>media.navigator.enabled = false</li></ol><ul><li>网站可以跟踪用户上网设备里的麦克风和摄影机状态</li></ul><ol start="14"><li><p>network.cookie.cookieBehavior = 1</p><ul><li>取消cookies</li><li>0 = Accept all cookies by default （默认接受所有cookies）</li><li>1 = Only accept from the originating site (block third party cookies) (只接受来自原网站的Cookies（阻止第三方Cookies）。)</li><li>2 = Block all cookies by default ( 默认情况下禁止所有cookies)</li></ul></li><li><p>network.cookie.lifetimePolicy = 2</p><ul><li>cookies 在期间结束后会被刪除</li><li>0 = Accept cookies normally (正常接受cookies)</li><li>1 = Prompt for each cookie (每个cookie的提示)</li><li>2 = Accept for current session only (只接受当前会议)</li><li>3 = Accept for N days (接受N天)</li></ul></li><li><p>network.http.referer.trimmingPolicy = 2</p><ul><li>Send only the scheme, host, and port in the <code>Referer</code> header  (只发送Referer标头中的方案、主机和端口。)</li><li>0 = Send the full URL in the <code>Referer</code> header (在Referer header中发送完整的URL。)</li><li>1 = Send the URL without its query string in the <code>Referer</code> header (发送不含查询字符串的URL的Referer header)</li><li>2 = Send only the scheme, host, and port in the <code>Referer</code> header</li></ul></li><li><p>network.http.referer.XOriginPolicy = 2</p><ul><li>Only send <code>Referer</code> header when the full hostnames match. (Note: if you notice significant breakage, you might try <code>1</code> combined with an <code>XOriginTrimmingPolicy</code> tweak below.)</li><li>0 = Send <code>Referer</code> in all cases</li><li>1 = Send <code>Referer</code> to same eTLD sites</li><li>2 = Send <code>Referer</code> only when the full hostnames match</li></ul></li><li><p>network.http.referer.XOriginTrimmingPolicy = 2</p><ul><li>When sending <code>Referer</code> across origins, only send scheme, host, and port in the <code>Referer</code> header of cross-origin requests.</li><li>0 = Send full url in <code>Referer</code></li><li>1 = Send url without query string in <code>Referer</code></li><li>2 = Only send scheme, host, and port in <code>Referer</code></li></ul></li><li><p>webgl.disabled = true</p></li></ol><ul><li>WebGL 有潜在的安全风险</li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;FireFox-about-config-的隐私设置调整&quot;&gt;
          &lt;a href=&quot;#FireFox-about-config-的隐私设置调整&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;FireFox: &quot;about:config&quot;的隐私设置调整&lt;/h2&gt;
      

        &lt;h3 id=&quot;准备：&quot;&gt;
          &lt;a href=&quot;#准备：&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;准备：&lt;/h3&gt;
      
&lt;p&gt;1.在浏览器的网址列输入 “about:config” 并点击 enter 键&lt;/p&gt;
&lt;p&gt;2.点击&quot;I’ll be careful, I promise!&quot;按钮&lt;br&gt;
3.依照下方的指示操作…&lt;/p&gt;

        &lt;h3 id=&quot;开始动手：&quot;&gt;
          &lt;a href=&quot;#开始动手：&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;开始动手：&lt;/h3&gt;
      
&lt;ol&gt;
&lt;li&gt;
&lt;p&gt;privacy.firstparty.isolate = true&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://wiki.mozilla.org/Security/Tor_Uplift&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tor Uplift&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt;效用的结果，它可隔绝主要访问网域中所有浏览器辨识器来源（如 cookies），并期能可阻挡跨域名的追踪。（如果已使用扩展 “Cookie AutoDelete”，请不要打开此功能。）&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;privacy.resistFingerprinting = true&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;span class=&quot;exturl&quot;&gt;&lt;a class=&quot;exturl__link&quot; href=&quot;https://wiki.mozilla.org/Security/Tor_Uplift&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;Tor Uplift&lt;/a&gt;&lt;span class=&quot;exturl__icon&quot;&gt;&lt;i class=&quot;fas fa-external-link-alt&quot;&gt;&lt;/i&gt;&lt;/span&gt;&lt;/span&gt; 效用的结果, 此偏好可让 Firefox 更能抵抗指纹辨识。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;
&lt;p&gt;privacy.trackingprotection.enabled = true&lt;/p&gt;&lt;/li&gt;&lt;/ol&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="WebRTC" scheme="http://kisskisso.com/tags/WebRTC/"/>
    
  </entry>
  
  <entry>
    <title>如何在Firefox中禁用WebRTC</title>
    <link href="http://kisskisso.com/2021/02/10/%E5%A6%82%E4%BD%95%E5%9C%A8Firefox%E4%B8%AD%E7%A6%81%E7%94%A8WebRTC/"/>
    <id>http://kisskisso.com/2021/02/10/%E5%A6%82%E4%BD%95%E5%9C%A8Firefox%E4%B8%AD%E7%A6%81%E7%94%A8WebRTC/</id>
    <published>2021-02-10T16:30:30.000Z</published>
    <updated>2021-02-10T09:07:14.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="如何在Firefox中禁用WebRTC？">          <a href="#如何在Firefox中禁用WebRTC？" class="heading-link"><i class="fas fa-link"></i></a>如何在Firefox中禁用WebRTC？</h3>      <p>简而言之：在 <code>about:config</code> 中设置 <code>media.peerconnection.enabled </code>为 <code>false</code>。<br>解释一下:<br>在firefox地址栏输入 "about:config "然后按回车键。<br>按 "我会小心的，我保证！"按钮。<br>搜索 “media.peerconnection.enabled”<br>双击该条目，"Value "列现在应该是 “false”<br>完成。再做一次<span class="exturl"><a class="exturl__link" href="https://ipleak.net/" target="_blank" rel="noopener">WebRTC泄漏测试</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>。</p><p>如果你想确保每一个与WebRTC相关的设置真的被禁用，请更改这些设置。<br>1.media.peerconnection.turn.disable = true。<br>2.media.peerconnection.use_document_iceservers = false<br>3.media.peerconnection.video.enabled = false<br>4.media.peerconnection.identity.timeout = 1<br>现在你可以100%确定WebRTC被禁用。</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h3 id=&quot;如何在Firefox中禁用WebRTC？&quot;&gt;
          &lt;a href=&quot;#如何在Firefox中禁用WebRTC？&quot; class=&quot;heading-link&quot;&gt;&lt;i class=&quot;fas fa-link&quot;&gt;&lt;/i&gt;&lt;/a&gt;如何在Firefox中禁用We
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>向你而生</title>
    <link href="http://kisskisso.com/2021/02/09/%E5%90%91%E4%BD%A0%E8%80%8C%E7%94%9F/"/>
    <id>http://kisskisso.com/2021/02/09/%E5%90%91%E4%BD%A0%E8%80%8C%E7%94%9F/</id>
    <published>2021-02-09T20:22:48.000Z</published>
    <updated>2021-02-09T12:26:25.000Z</updated>
    
    <content type="html"><![CDATA[<p>“反抗将自身价值给予人生，贯穿人生的始末，恢复人生的伟大对眼光开阔的人而言，最美的景观莫过于智力与超过人的现实之间的搏斗。”-----走出自卑陰影，在更高､更遠的地方找到生命的補償</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;“反抗将自身价值给予人生，贯穿人生的始末，恢复人生的伟大对眼光开阔的人而言，最美的景观莫过于智力与超过人的现实之间的搏斗。”-----走出自卑陰影，在更高､更遠的地方找到生命的補償&lt;/p&gt;
&lt;script&gt;
        document.querySelectorAll
      
    
    </summary>
    
    
      <category term="生活与话" scheme="http://kisskisso.com/categories/%E7%94%9F%E6%B4%BB%E4%B8%8E%E8%AF%9D/"/>
    
    
      <category term="話" scheme="http://kisskisso.com/tags/%E8%A9%B1/"/>
    
  </entry>
  
  <entry>
    <title>小學生水平</title>
    <link href="http://kisskisso.com/2021/02/07/%E5%B0%8F%E5%AD%B8%E7%94%9F%E6%B0%B4%E5%B9%B3/"/>
    <id>http://kisskisso.com/2021/02/07/%E5%B0%8F%E5%AD%B8%E7%94%9F%E6%B0%B4%E5%B9%B3/</id>
    <published>2021-02-07T21:38:37.000Z</published>
    <updated>2021-02-07T14:22:04.000Z</updated>
    
    <content type="html"><![CDATA[<p><img src="https://img-1302744895.cos.ap-hongkong.myqcloud.com/img/%E6%84%9B%E9%BA%97%E7%B5%B22.png" alt=""></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;img src=&quot;https://img-1302744895.cos.ap-hongkong.myqcloud.com/img/%E6%84%9B%E9%BA%97%E7%B5%B22.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;script&gt;
        document
      
    
    </summary>
    
    
      <category term="生活与话" scheme="http://kisskisso.com/categories/%E7%94%9F%E6%B4%BB%E4%B8%8E%E8%AF%9D/"/>
    
    
      <category term="画" scheme="http://kisskisso.com/tags/%E7%94%BB/"/>
    
  </entry>
  
  <entry>
    <title>hexo报错</title>
    <link href="http://kisskisso.com/2021/02/02/hexo%E6%8A%A5%E9%94%99/"/>
    <id>http://kisskisso.com/2021/02/02/hexo%E6%8A%A5%E9%94%99/</id>
    <published>2021-02-02T15:29:29.000Z</published>
    <updated>2021-02-02T07:33:34.000Z</updated>
    
    <content type="html"><![CDATA[<p><strong>报错</strong></p><p>hexo 报错 use_date_for_updated is deprecated…</p><p>WARN Deprecated config detected: “use_date_for_updated” is deprecated, please se “updated option” instead. See <span class="exturl"><a class="exturl__link" href="https://hexo.io/docs/configuration" target="_blank" rel="noopener">https://hexo.io/docs/configuration</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span> for more deails.</p><p><strong>解决办法</strong></p><p>编辑根目录的 <code>_config.yml</code> 文件 , 把 <code>use_date_for_updated</code> 值改为 <code>updated_option</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;&lt;strong&gt;报错&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;hexo 报错 use_date_for_updated is deprecated…&lt;/p&gt;
&lt;p&gt;WARN Deprecated config detected: “use_date_for_updated” is 
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
      <category term="hexo" scheme="http://kisskisso.com/tags/hexo/"/>
    
  </entry>
  
  <entry>
    <title>VirtualBox共享文件设置</title>
    <link href="http://kisskisso.com/2021/02/02/VirtualBox%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E8%AE%BE%E7%BD%AE/"/>
    <id>http://kisskisso.com/2021/02/02/VirtualBox%E5%85%B1%E4%BA%AB%E6%96%87%E4%BB%B6%E8%AE%BE%E7%BD%AE/</id>
    <published>2021-02-02T15:19:16.000Z</published>
    <updated>2021-02-02T07:33:34.000Z</updated>
    
    <content type="html"><![CDATA[<p>在 VirtualBox 中选择<code>设置/共享文件夹</code>，添加想要共享文件夹；设置共享文件夹的名称，选择 <code>固定分配</code>；确认 <code>OK</code>。</p><p>进入 Linux系统，选择一个文件夹作为共享文件夹</p><p>打开终端，写入 <code>$ sudo mount -t vboxsf 共享文件夹的名 在Linux建立的共享文件夹名</code></p><p>ps：</p><ul><li>重启后，已设置的共享文件夹将会消失，需要再次执行挂载命令。</li><li>在Linux建立的文件夹需要<code>sudo chmod 777 [文件夹名] </code></li><li>可是设置<code>自动挂载</code></li></ul><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;在 VirtualBox 中选择&lt;code&gt;设置/共享文件夹&lt;/code&gt;，添加想要共享文件夹；设置共享文件夹的名称，选择 &lt;code&gt;固定分配&lt;/code&gt;；确认 &lt;code&gt;OK&lt;/code&gt;。&lt;/p&gt;
&lt;p&gt;进入 Linux系统，选择一个文件夹作为共享文件夹&lt;/p&gt;

      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Linux安装配置</title>
    <link href="http://kisskisso.com/2021/02/01/Linux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/"/>
    <id>http://kisskisso.com/2021/02/01/Linux%E5%AE%89%E8%A3%85%E9%85%8D%E7%BD%AE/</id>
    <published>2021-02-01T20:51:30.000Z</published>
    <updated>2021-02-02T11:14:56.000Z</updated>
    
    <content type="html"><![CDATA[<p>更新源      <code>sudo apt-get update</code></p><p>更新软件   <code>sudo apt-get upgrade</code></p><p>安装vim   <code>sudo apt-get install vim</code></p><p>安装zsh   <code>sudo apt-get install zsh</code></p><p>安装oh-my-zsh</p><p>安装nodejs   <code>sudo apt-get install nodejs</code></p><p>切換鏡像源</p><pre><code>npm config set registry=https://registry.npm.taobao.org/</code></pre><p>檢查鏡像源是否下載成功：<a id="more"></a></p><p>npm config get registry</p><p>安装npm  nrm    <code>sudo apt-get isntall npm</code>  <code>sudo npm install nrm -g</code></p><p>安装hexo  <code>npm install hexo-cli -g</code></p><p>安装vscode</p><p>GitHub配置 ssh</p><pre><code class="language-bash">ssh-keygen -t rsa -C "youremail"</code></pre><p>然後一路回車，生成  <code>.ssh</code> 的文件夾。在你的筆電中找到這個文件夾</p><pre><code class="language-bash">~/.ssh/id_rsa.pub</code></pre><p>打开<span class="exturl"><a class="exturl__link" href="https://github.com/" target="_blank" rel="noopener">github</a><span class="exturl__icon"><i class="fas fa-external-link-alt"></i></span></span>，在头像下面点击<code>settings</code>，再点击<code>SSH and GPG keys</code>，新建一个<code>SSH</code>，名字随便取一个都可以，把你的<code>id_rsa.pub</code>里面的信息复制进去。</p><p>安装输入法 <code>sudo apt-get install fcitx</code>   百度拼音</p><p>安装md软件</p><pre><code class="language-bash"># or run:# sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys BA300B7755AFCFAEwget -qO - &lt;https://typora.io/linux/public-key.asc&gt; | sudo apt-key add -# add Typora's repositorysudo add-apt-repository 'deb &lt;https://typora.io/linux&gt; ./'sudo apt-get update# install typorasudo apt-get install typora</code></pre><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;更新源      &lt;code&gt;sudo apt-get update&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;更新软件   &lt;code&gt;sudo apt-get upgrade&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装vim   &lt;code&gt;sudo apt-get install vim&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装zsh   &lt;code&gt;sudo apt-get install zsh&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;安装oh-my-zsh&lt;/p&gt;
&lt;p&gt;安装nodejs   &lt;code&gt;sudo apt-get install nodejs&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;切換鏡像源&lt;/p&gt;
&lt;pre&gt;&lt;code&gt;npm config set registry=https://registry.npm.taobao.org/
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;檢查鏡像源是否下載成功：&lt;/p&gt;
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>虚拟机安装增强功能</title>
    <link href="http://kisskisso.com/2021/02/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E5%A2%9E%E5%BC%BA%E5%8A%9F%E8%83%BD/"/>
    <id>http://kisskisso.com/2021/02/01/%E8%99%9A%E6%8B%9F%E6%9C%BA%E5%AE%89%E8%A3%85%E5%A2%9E%E5%BC%BA%E5%8A%9F%E8%83%BD/</id>
    <published>2021-02-01T18:27:56.000Z</published>
    <updated>2021-02-01T10:35:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>打开虚拟机光盘，在终端运行<code>sudo ./VBoxLinuxAdditions.run</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打开虚拟机光盘，在终端运行&lt;code&gt;sudo ./VBoxLinuxAdditions.run&lt;/code&gt;&lt;/p&gt;
&lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEac
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>坚果云更改备份路径</title>
    <link href="http://kisskisso.com/2021/02/01/%E5%9D%9A%E6%9E%9C%E4%BA%91%E6%9B%B4%E6%94%B9%E5%A4%87%E4%BB%BD%E8%B7%AF%E5%BE%84/"/>
    <id>http://kisskisso.com/2021/02/01/%E5%9D%9A%E6%9E%9C%E4%BA%91%E6%9B%B4%E6%94%B9%E5%A4%87%E4%BB%BD%E8%B7%AF%E5%BE%84/</id>
    <published>2021-02-01T13:34:27.000Z</published>
    <updated>2021-02-04T09:00:55.000Z</updated>
    
    <content type="html"><![CDATA[<p>打开坚果云 找到要更改的文件夹 选择右边三个点 点击同步设置 ——修改同步路径</p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;打开坚果云 找到要更改的文件夹 选择右边三个点 点击同步设置 ——修改同步路径&lt;/p&gt;
&lt;script&gt;
        document.querySelectorAll(&#39;.github-emoji&#39;)
          .forEach(el =&gt; {
      
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>如何更新hexo和插件版本</title>
    <link href="http://kisskisso.com/2021/01/31/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0hexo%E5%92%8C%E6%8F%92%E4%BB%B6%E7%89%88%E6%9C%AC/"/>
    <id>http://kisskisso.com/2021/01/31/%E5%A6%82%E4%BD%95%E6%9B%B4%E6%96%B0hexo%E5%92%8C%E6%8F%92%E4%BB%B6%E7%89%88%E6%9C%AC/</id>
    <published>2021-01-31T20:15:32.000Z</published>
    <updated>2021-01-31T12:46:01.000Z</updated>
    
    <content type="html"><![CDATA[<p>自动更新----进入博客根目录运行<code>npm update</code></p><p>手动更新----进入博客根目录运行<code>npm outdated</code></p><p>运行后查看Hexo和插件的最新版本然后修改根目录下的<code>package.json</code>将对应的插件名和Hexo对应的版本号更新为要更新的版本号</p><p>开始更新----<code>npm install --save</code></p><p>查看版本号----<code>hexo version</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;自动更新----进入博客根目录运行&lt;code&gt;npm update&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;手动更新----进入博客根目录运行&lt;code&gt;npm outdated&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;运行后查看Hexo和插件的最新版本然后修改根目录下的&lt;code&gt;package
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>vim下方向键无法移动光标</title>
    <link href="http://kisskisso.com/2021/01/31/vim%E4%B8%8B%E6%96%B9%E5%90%91%E9%94%AE%E6%97%A0%E6%B3%95%E7%A7%BB%E5%8A%A8%E5%85%89%E6%A0%87/"/>
    <id>http://kisskisso.com/2021/01/31/vim%E4%B8%8B%E6%96%B9%E5%90%91%E9%94%AE%E6%97%A0%E6%B3%95%E7%A7%BB%E5%8A%A8%E5%85%89%E6%A0%87/</id>
    <published>2021-01-31T17:54:08.000Z</published>
    <updated>2021-01-31T10:00:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>方式一：可以使用【H左】【K上】【J下】【L右】移动光标修改</p><p>方式二：下载vim自动的vim是精简版<code>sudo apt-get install vim</code></p><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;p&gt;方式一：可以使用【H左】【K上】【J下】【L右】移动光标修改&lt;/p&gt;
&lt;p&gt;方式二：下载vim自动的vim是精简版&lt;code&gt;sudo apt-get install vim&lt;/code&gt;&lt;/p&gt;
&lt;script&gt;
        document.querySelecto
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
  <entry>
    <title>Windows创建还原点</title>
    <link href="http://kisskisso.com/2021/01/31/Windows%E5%88%9B%E5%BB%BA%E8%BF%98%E5%8E%9F%E7%82%B9/"/>
    <id>http://kisskisso.com/2021/01/31/Windows%E5%88%9B%E5%BB%BA%E8%BF%98%E5%8E%9F%E7%82%B9/</id>
    <published>2021-01-31T17:26:34.000Z</published>
    <updated>2021-01-31T10:00:23.000Z</updated>
    
    <content type="html"><![CDATA[<h1>创建系统还原点</h1><p>Windows 10</p><ol><li>在任务栏上的搜索框中，键入“创建还原点”，然后从结果列表中选择它。</li><li>在“系统属性”的“系统保护”选项卡上，选择“创建”。</li><li>键入有关还原点的描述，然后依次选择“创建”&gt;“确定”。</li></ol><script>        document.querySelectorAll('.github-emoji')          .forEach(el => {            if (!el.dataset.src) { return; }            const img = document.createElement('img');            img.style = 'display:none !important;';            img.src = el.dataset.src;            img.addEventListener('error', () => {              img.remove();              el.style.color = 'inherit';              el.style.backgroundImage = 'none';              el.style.background = 'none';            });            img.addEventListener('load', () => {              img.remove();            });            document.body.appendChild(img);          });      </script>]]></content>
    
    <summary type="html">
    
      
      
        &lt;h1&gt;创建系统还原点&lt;/h1&gt;
&lt;p&gt;Windows 10&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;在任务栏上的搜索框中，键入“创建还原点”，然后从结果列表中选择它。&lt;/li&gt;
&lt;li&gt;在“系统属性”的“系统保护”选项卡上，选择“创建”。&lt;/li&gt;
&lt;li&gt;键入有关还原点的描述，然后依次选择
      
    
    </summary>
    
    
      <category term="笔记" scheme="http://kisskisso.com/categories/%E7%AC%94%E8%AE%B0/"/>
    
    
  </entry>
  
</feed>
